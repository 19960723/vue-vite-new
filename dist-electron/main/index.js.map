{"version":3,"file":"index.js","sources":["../../electron/main/menu.ts","../../electron/main/window.ts","../../electron/main/index.ts"],"sourcesContent":["const { Menu, MenuItem } = require('electron');\r\n\r\nconst customMenu = new Menu();\r\ncustomMenu.append(new MenuItem({ label: 'Menu Item 1' }));\r\ncustomMenu.append(new MenuItem({ label: 'Menu Item 2' }));\r\n\r\n// 给菜单添加自定义 CSS 类\r\n// customMenu.popupOptions = {\r\n//   className: 'custom-menu',\r\n// };\r\n\r\n// 在窗口上设置右键菜单事件监听器\r\n// window.addEventListener('contextmenu', (event) => {\r\n//   event.preventDefault();\r\n//   customMenu.popup();\r\n// });\r\n","import { app, BrowserWindow, shell, screen, systemPreferences, ipcMain, dialog } from 'electron';\r\nimport { join } from 'node:path';\r\n\r\nlet mainWindow: BrowserWindow | null = null;\r\nprocess.env.DIST_ELECTRON = join(__dirname, '..');\r\nprocess.env.DIST = join(process.env.DIST_ELECTRON, '../dist');\r\nprocess.env.PUBLIC = process.env.VITE_DEV_SERVER_URL\r\n  ? join(process.env.DIST_ELECTRON, '../public')\r\n  : process.env.DIST;\r\n\r\nconst url = process.env.VITE_DEV_SERVER_URL;\r\nconst preload = join(__dirname, '../preload/index.js');\r\nconst winList: Array<BrowserWindow> = []; // 打开窗口的列表\r\nconst emptyList: Array<BrowserWindow> = []; // 预加载空页面\r\n// 初始化窗口\r\nexport function initWindow() {\r\n  mainWindow = BrowserWindow.getFocusedWindow();\r\n  mainWindow?.once('focus', () => {\r\n    console.log(mainWindow?.title);\r\n    initWindow();\r\n  });\r\n}\r\n// 事件监听\r\nipcMain.on('electron_window', (event, message) => {\r\n  const { type, id } = message;\r\n  initWindow();\r\n  switch (type) {\r\n    case 'get-window-info':\r\n      getWindowInfo(event);\r\n      break;\r\n    case 'get-all-win':\r\n      getAllWin(event);\r\n      break;\r\n    case 'hide-win':\r\n      hide();\r\n      break;\r\n    case 'show-win':\r\n      if (id) {\r\n        show(id);\r\n      }\r\n      break;\r\n    case 'close-win':\r\n      close();\r\n      break;\r\n    case 'focus-win':\r\n      focus();\r\n      break;\r\n    case 'setAlwaysOnTop':\r\n      setAlwaysOnTop(message);\r\n      break;\r\n    case 'get-win-position':\r\n      getWinPosition(event);\r\n      break;\r\n    case 'set-win-position':\r\n      setWinPosition(message);\r\n      break;\r\n    case 'minimize':\r\n      minimize();\r\n      break;\r\n    case 'maximize':\r\n      maximize();\r\n      break;\r\n  }\r\n});\r\n// 监听创建新窗口\r\nipcMain.on('routerWindow', (e, routerObj) => {\r\n  const winList = BrowserWindow?.getAllWindows();\r\n  const routerName = routerObj.name;\r\n  routerObj.title = routerObj.name;\r\n  let win = winList.find((v) => v.title == routerName);\r\n  if (win) {\r\n    sendMessage(win, { router: { ...routerObj, id: win.id } });\r\n    win.show();\r\n    return;\r\n  }\r\n  if (emptyList.length && routerObj.name) {\r\n    win = emptyList[0];\r\n    win.title = routerName;\r\n    emptyList.splice(0, 1);\r\n    emptyList.length === 0 && createNewPageWindow();\r\n  }\r\n  if (!win) {\r\n    routerObj.name && createNewPageWindow(routerObj, parent);\r\n    emptyList.length === 0 && createNewPageWindow();\r\n    return;\r\n  }\r\n  win.routerName = routerObj.name;\r\n  sendMessage(win, { router: { ...routerObj, id: win.id } });\r\n});\r\n\r\n// 获取当前窗口信息\r\nfunction getWindowInfo(event) {\r\n  event.returnValue = {\r\n    id: mainWindow?.id,\r\n    title: mainWindow?.getTitle(),\r\n    bounds: mainWindow?.getBounds(),\r\n  };\r\n}\r\n// 获取所有的窗口列表\r\nfunction getAllWin(event) {\r\n  const winList = BrowserWindow.getAllWindows();\r\n  const win_list = winList.map((v) => {\r\n    return {\r\n      id: v.id,\r\n      title: v.title,\r\n    };\r\n  });\r\n  event.returnValue = {\r\n    win_list,\r\n  };\r\n  console.log(win_list);\r\n}\r\n//隐藏窗口\r\nfunction hide() {\r\n  mainWindow?.hide();\r\n}\r\n//显示窗口\r\nfunction show(id) {\r\n  if (id) {\r\n    const winList = BrowserWindow?.getAllWindows();\r\n    const findWin = winList.find((v) => v.id == id);\r\n    findWin?.show();\r\n    return;\r\n  }\r\n  mainWindow?.show();\r\n}\r\n//关闭窗口\r\nfunction close() {\r\n  mainWindow?.close();\r\n}\r\n//聚焦窗口\r\nfunction focus() {\r\n  mainWindow?.focus();\r\n}\r\n// 置顶窗口\r\nfunction setAlwaysOnTop(message) {\r\n  const { flag } = message;\r\n  mainWindow?.setAlwaysOnTop(flag);\r\n}\r\n// 获取窗口位置\r\nfunction getWinPosition(event) {\r\n  const pos = mainWindow?.getPosition();\r\n  event.returnValue = {\r\n    pos,\r\n  };\r\n}\r\n// 设置窗口位置\r\nfunction setWinPosition(message) {\r\n  const { x, y } = message;\r\n  mainWindow?.setPosition(parseInt(x), parseInt(y));\r\n}\r\n// 最小化\r\nfunction minimize() {\r\n  mainWindow?.minimize();\r\n}\r\n// 最大化\r\nfunction maximize() {\r\n  mainWindow?.maximize();\r\n}\r\n// 创建新窗口\r\nexport function createNewPageWindow(routerObj?: Object, parent?: Object) {\r\n  if (process.env.NODE_ENV === 'development' && winList.length + emptyList.length >= 4) {\r\n    routerObj &&\r\n      dialog.showMessageBox({\r\n        title: '提示',\r\n        message: '开发模式,不要打开太多窗口',\r\n      });\r\n    return;\r\n  }\r\n  const browserOptions = {\r\n    icon: join(process.env.PUBLIC, 'favicon.ico'),\r\n    show: false,\r\n    ...routerObj,\r\n    webPreferences: {\r\n      preload,\r\n      nodeIntegration: true,\r\n      contextIsolation: false,\r\n    },\r\n  };\r\n  const win = new BrowserWindow(browserOptions);\r\n  if (!routerObj) {\r\n    emptyList.push(win);\r\n  }\r\n  win.currentName = 'newPageWindow';\r\n  const webContents = win.webContents;\r\n  // 阻止新窗口的创建\r\n  webContents.on('new-window', (event, url) => {});\r\n  webContents.on('before-input-event', (event, input) => {});\r\n\r\n  // 预加载个空页面\r\n  win.loadURL(`${url}#empty`);\r\n  win.once('ready-to-show', () => {\r\n    sendMessage(win, { ready: true });\r\n  });\r\n  win.on('focus', () => {\r\n    if (!(win && win.isEnabled())) {\r\n      if (win.getChildWindows() && win.getChildWindows().length) {\r\n        win.getChildWindows().forEach((v) => {\r\n          v.show();\r\n        });\r\n      } else {\r\n        win.setEnabled(true);\r\n      }\r\n    }\r\n  });\r\n  win.on('close', () => {});\r\n  win.on('closed', () => {});\r\n  win.on('hide', () => {});\r\n}\r\n// 向渲染进程发送信息\r\nfunction sendMessage(win, text) {\r\n  if (!win) return;\r\n  console.log(text);\r\n  win.webContents.send('newPageMessage', text);\r\n}\r\n","import { app, BrowserWindow, shell, screen, systemPreferences, ipcMain } from 'electron';\r\nimport { release } from 'node:os';\r\nimport { join } from 'node:path';\r\nimport './menu';\r\nimport { initWindow, createNewPageWindow } from './window';\r\n// The built directory structure\r\n//\r\n// ├─┬ dist-electron\r\n// │ ├─┬ main\r\n// │ │ └── index.js    > Electron-Main\r\n// │ └─┬ preload\r\n// │   └── index.js    > Preload-Scripts\r\n// ├─┬ dist\r\n// │ └── index.html    > Electron-Renderer\r\n//\r\nprocess.env.DIST_ELECTRON = join(__dirname, '..');\r\nprocess.env.DIST = join(process.env.DIST_ELECTRON, '../dist');\r\nprocess.env.PUBLIC = process.env.VITE_DEV_SERVER_URL\r\n  ? join(process.env.DIST_ELECTRON, '../public')\r\n  : process.env.DIST;\r\n\r\n// Disable GPU Acceleration for Windows 7\r\nif (release().startsWith('6.1')) app.disableHardwareAcceleration();\r\n\r\n// Set application name for Windows 10+ notifications\r\nif (process.platform === 'win32') app.setAppUserModelId(app.getName());\r\n\r\nif (!app.requestSingleInstanceLock()) {\r\n  app.quit();\r\n  process.exit(0);\r\n}\r\n\r\nlet isHasScreen = false;\r\nasync function checkAndApplyDevicePrivilege() {\r\n  const cameraPrivilege = systemPreferences.getMediaAccessStatus('camera');\r\n\r\n  if (cameraPrivilege !== 'granted') {\r\n    await systemPreferences.askForMediaAccess('camera');\r\n  }\r\n\r\n  const micPrivilege = systemPreferences.getMediaAccessStatus('microphone');\r\n\r\n  if (micPrivilege !== 'granted') {\r\n    await systemPreferences.askForMediaAccess('microphone');\r\n  }\r\n\r\n  const screenPrivilege = systemPreferences.getMediaAccessStatus('screen');\r\n  console.log(screenPrivilege);\r\n  if (screenPrivilege === 'granted') {\r\n    isHasScreen = true;\r\n  }\r\n}\r\n\r\n// Remove electron security warnings\r\n// This warning only shows in development mode\r\n// Read more on https://www.electronjs.org/docs/latest/tutorial/security\r\n// process.env['ELECTRON_DISABLE_SECURITY_WARNINGS'] = 'true'\r\n\r\nlet win: BrowserWindow | null = null;\r\n// Here, you can also use other preload\r\nconst preload = join(__dirname, '../preload/index.js');\r\nconst url = process.env.VITE_DEV_SERVER_URL;\r\nconst indexHtml = join(process.env.DIST, 'index.html');\r\nasync function createWindow() {\r\n  await checkAndApplyDevicePrivilege();\r\n  const { width, height } = screen.getPrimaryDisplay().workAreaSize;\r\n  win = new BrowserWindow({\r\n    title: 'Main window',\r\n    width,\r\n    height,\r\n    minWidth: 1200,\r\n    minHeight: 640,\r\n    // autoHideMenuBar: true,\r\n    icon: join(process.env.PUBLIC, 'favicon.ico'),\r\n    webPreferences: {\r\n      preload,\r\n      // Warning: Enable nodeIntegration and disable contextIsolation is not secure in production\r\n      // Consider using contextBridge.exposeInMainWorld\r\n      // Read more on https://www.electronjs.org/docs/latest/tutorial/context-isolation\r\n      nodeIntegration: true,\r\n      contextIsolation: false,\r\n    },\r\n  });\r\n  if (process.env.VITE_DEV_SERVER_URL) {\r\n    // electron-vite-vue#298\r\n    const installExtension = require('electron-devtools-installer');\r\n    installExtension\r\n      .default(installExtension.VUEJS_DEVTOOLS)\r\n      .then(() => {})\r\n      .catch((err: Error) => {\r\n        console.log('Unable to install `vue-devtools`: \\n', err);\r\n      });\r\n    win.loadURL(url);\r\n    // Open devTool if the app is not packaged\r\n    win.webContents.openDevTools();\r\n  } else {\r\n    win.loadFile(indexHtml);\r\n  }\r\n\r\n  // Test actively push message to the Electron-Renderer\r\n  win.webContents.on('did-finish-load', () => {\r\n    win?.webContents.send('main-process-message', { isHasScreen });\r\n  });\r\n\r\n  // Make all links open with the browser, not with the application\r\n  win.webContents.setWindowOpenHandler(({ url }) => {\r\n    if (url.startsWith('https:')) shell.openExternal(url);\r\n    return { action: 'deny' };\r\n  });\r\n  // win.webContents.on('will-navigate', (event, url) => { }) #344\r\n  createNewPageWindow(); // 默认先创建一个空的窗口\r\n  initWindow();\r\n}\r\n\r\napp.whenReady().then(createWindow);\r\n\r\napp.on('window-all-closed', () => {\r\n  win = null;\r\n  if (process.platform !== 'darwin') app.quit();\r\n});\r\n\r\napp.on('second-instance', () => {\r\n  if (win) {\r\n    // Focus on the main window if the user tried to open another\r\n    if (win.isMinimized()) win.restore();\r\n    win.focus();\r\n  }\r\n});\r\n\r\napp.on('activate', () => {\r\n  const allWindows = BrowserWindow.getAllWindows();\r\n  if (allWindows.length) {\r\n    allWindows[0].focus();\r\n  } else {\r\n    createWindow();\r\n  }\r\n});\r\n\r\n// New window example arg: new windows url\r\nipcMain.handle('open-win', (_, arg) => {\r\n  const { title } = arg;\r\n  const winList = BrowserWindow?.getAllWindows();\r\n  const findWin = winList.find((v) => v.title == title);\r\n  if (findWin) {\r\n    findWin.show();\r\n    return;\r\n  }\r\n\r\n  const childWindow = new BrowserWindow({\r\n    ...arg,\r\n    webPreferences: {\r\n      preload,\r\n      nodeIntegration: true,\r\n      contextIsolation: false,\r\n    },\r\n  });\r\n  initWindow();\r\n  if (process.env.VITE_DEV_SERVER_URL) {\r\n    childWindow.loadURL(`${url}#${title}`);\r\n  } else {\r\n    childWindow.loadFile(indexHtml, { hash: arg });\r\n  }\r\n});\r\n"],"names":["join","url","preload","BrowserWindow","ipcMain","winList","win","parent","dialog","release","app","systemPreferences","screen","shell"],"mappings":"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"}